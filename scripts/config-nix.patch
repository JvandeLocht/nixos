--- /home/nixos/configuration.nix	2024-08-16 08:05:32.340286262 +0000
+++ /mnt/etc/nixos/configuration.nix	2024-08-16 08:42:23.664063006 +0000
@@ -12,6 +12,10 @@
 
   # Use the GRUB 2 boot loader.
   boot.loader.grub.enable = true;
+  boot.supportedFilesystems = [ "zfs" ];
+  boot.loader.grub.device = "/dev/sda";  # replace `${DISK}` with the actual disk name, eg /dev/nvme0n1
+  boot.kernelPackages = pkgs.zfs.latestCompatibleLinuxPackages;
+
   # boot.loader.grub.efiSupport = true;
   # boot.loader.grub.efiInstallAsRemovable = true;
   # boot.loader.efi.efiSysMountPoint = "/boot/efi";
@@ -19,12 +23,13 @@
   # boot.loader.grub.device = "/dev/sda"; # or "nodev" for efi only
 
   # networking.hostName = "nixos"; # Define your hostname.
+  networking.hostId = "1f14e9b8";
   # Pick only one of the below networking options.
   # networking.wireless.enable = true;  # Enables wireless support via wpa_supplicant.
-  # networking.networkmanager.enable = true;  # Easiest to use and most distros use this by default.
+  networking.networkmanager.enable = true;  # Easiest to use and most distros use this by default.
 
   # Set your time zone.
-  # time.timeZone = "Europe/Amsterdam";
+  time.timeZone = "Europe/Amsterdam";
 
   # Configure network proxy if necessary
   # networking.proxy.default = "http://user:password@proxy:port/";
@@ -74,13 +79,29 @@
   #     tree
   #   ];
   # };
+  services.openssh.enable = true;  # If using VPS
+
+  security.sudo.wheelNeedsPassword = false;
+  users.users."<your username>" = {
+    isNormalUser = true;
+      password = "password";  # Change this once your computer is set up!
+        home = "/home/<your username>";
+          extraGroups = [ "wheel" "networkmanager" ];
+            openssh.authorizedKeys.keys = [ "<your ssh key>" ];  # If using VPS
+            };
+    
+  nix.settings = {
+      experimental-features = ["nix-command" "flakes"];
+          trusted-users = ["jan"]; # Add your own username to the trusted list
+            };
 
   # List packages installed in system profile. To search, run:
   # $ nix search wget
-  # environment.systemPackages = with pkgs; [
-  #   vim # Do not forget to add an editor to edit configuration.nix! The Nano editor is also installed by default.
-  #   wget
-  # ];
+  environment.systemPackages = with pkgs; [
+    vim # Do not forget to add an editor to edit configuration.nix! The Nano editor is also installed by default.
+    wget
+    git
+  ];
 
   # Some programs need SUID wrappers, can be configured further or are
   # started in user sessions.
